//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GlobalContext {

    public GlobalEntity timeScaleEntity { get { return GetGroup(GlobalMatcher.TimeScale).GetSingleEntity(); } }
    public Client.Entitas.Global.Time.TimeScaleComponent timeScale { get { return timeScaleEntity.timeScale; } }
    public bool hasTimeScale { get { return timeScaleEntity != null; } }

    public GlobalEntity SetTimeScale(float newValue) {
        if (hasTimeScale) {
            throw new Entitas.EntitasException("Could not set TimeScale!\n" + this + " already has an entity with Client.Entitas.Global.Time.TimeScaleComponent!",
                "You should check if the context already has a timeScaleEntity before setting it or use context.ReplaceTimeScale().");
        }
        var entity = CreateEntity();
        entity.AddTimeScale(newValue);
        return entity;
    }

    public void ReplaceTimeScale(float newValue) {
        var entity = timeScaleEntity;
        if (entity == null) {
            entity = SetTimeScale(newValue);
        } else {
            entity.ReplaceTimeScale(newValue);
        }
    }

    public void RemoveTimeScale() {
        timeScaleEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GlobalEntity {

    public Client.Entitas.Global.Time.TimeScaleComponent timeScale { get { return (Client.Entitas.Global.Time.TimeScaleComponent)GetComponent(GlobalComponentsLookup.TimeScale); } }
    public bool hasTimeScale { get { return HasComponent(GlobalComponentsLookup.TimeScale); } }

    public void AddTimeScale(float newValue) {
        var index = GlobalComponentsLookup.TimeScale;
        var component = (Client.Entitas.Global.Time.TimeScaleComponent)CreateComponent(index, typeof(Client.Entitas.Global.Time.TimeScaleComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceTimeScale(float newValue) {
        var index = GlobalComponentsLookup.TimeScale;
        var component = (Client.Entitas.Global.Time.TimeScaleComponent)CreateComponent(index, typeof(Client.Entitas.Global.Time.TimeScaleComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveTimeScale() {
        RemoveComponent(GlobalComponentsLookup.TimeScale);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GlobalMatcher {

    static Entitas.IMatcher<GlobalEntity> _matcherTimeScale;

    public static Entitas.IMatcher<GlobalEntity> TimeScale {
        get {
            if (_matcherTimeScale == null) {
                var matcher = (Entitas.Matcher<GlobalEntity>)Entitas.Matcher<GlobalEntity>.AllOf(GlobalComponentsLookup.TimeScale);
                matcher.componentNames = GlobalComponentsLookup.componentNames;
                _matcherTimeScale = matcher;
            }

            return _matcherTimeScale;
        }
    }
}
