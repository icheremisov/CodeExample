using UnityEditor;
using UnityEngine;
using XLib.Configs.Contracts;
using XLib.Unity.Utils;

namespace XLib.Configs {

	[CustomPropertyDrawer(typeof(AutoGeneratedGuidAttribute))]
	public class AutoGeneratedGuidAttributeDrawer : PropertyDrawer
	{
		public override void OnGUI(Rect position, SerializedProperty property, GUIContent label)
		{
			if (property.serializedObject.targetObjects.Length != 1)
				EditorGUI.LabelField(position, label);
			else {
				var obj = property.serializedObject.targetObject as GameItemCore;
				var guid = EditorUtils.GetGuid(obj);
				if (guid.IsNullOrEmpty() && AssetDatabase.IsMainAsset(obj)) {
					var rect = EditorGUI.PrefixLabel(position, label);
					EditorGUI.indentLevel = 0;
					EditorGUI.SelectableLabel(rect, "None");
				}
				else {
					Utils.ConfigUtils.UpdateItemId(obj);
					var id = obj.Id;
					var rect = EditorGUI.PrefixLabel(position, label);
					EditorGUI.indentLevel = 0;
					using (GuiEx.Color(Color.green)) {
						EditorGUI.SelectableLabel(rect, $"{(uint) id:X8} ({id})");
					}
				}
			}
		}
	}


}