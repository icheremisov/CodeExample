//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class LevelContext {

    public LevelEntity levelStateChangeEntity { get { return GetGroup(LevelMatcher.LevelStateChange).GetSingleEntity(); } }
    public Client.Entitas.Levels.LevelStateChangeComponent levelStateChange { get { return levelStateChangeEntity.levelStateChange; } }
    public bool hasLevelStateChange { get { return levelStateChangeEntity != null; } }

    public LevelEntity SetLevelStateChange(System.Func<Client.Levels.Contracts.ClientLevelState, Client.Levels.Contracts.ClientLevelState> newValue) {
        if (hasLevelStateChange) {
            throw new Entitas.EntitasException("Could not set LevelStateChange!\n" + this + " already has an entity with Client.Entitas.Levels.LevelStateChangeComponent!",
                "You should check if the context already has a levelStateChangeEntity before setting it or use context.ReplaceLevelStateChange().");
        }
        var entity = CreateEntity();
        entity.AddLevelStateChange(newValue);
        return entity;
    }

    public void ReplaceLevelStateChange(System.Func<Client.Levels.Contracts.ClientLevelState, Client.Levels.Contracts.ClientLevelState> newValue) {
        var entity = levelStateChangeEntity;
        if (entity == null) {
            entity = SetLevelStateChange(newValue);
        } else {
            entity.ReplaceLevelStateChange(newValue);
        }
    }

    public void RemoveLevelStateChange() {
        levelStateChangeEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class LevelEntity {

    public Client.Entitas.Levels.LevelStateChangeComponent levelStateChange { get { return (Client.Entitas.Levels.LevelStateChangeComponent)GetComponent(LevelComponentsLookup.LevelStateChange); } }
    public bool hasLevelStateChange { get { return HasComponent(LevelComponentsLookup.LevelStateChange); } }

    public void AddLevelStateChange(System.Func<Client.Levels.Contracts.ClientLevelState, Client.Levels.Contracts.ClientLevelState> newValue) {
        var index = LevelComponentsLookup.LevelStateChange;
        var component = (Client.Entitas.Levels.LevelStateChangeComponent)CreateComponent(index, typeof(Client.Entitas.Levels.LevelStateChangeComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceLevelStateChange(System.Func<Client.Levels.Contracts.ClientLevelState, Client.Levels.Contracts.ClientLevelState> newValue) {
        var index = LevelComponentsLookup.LevelStateChange;
        var component = (Client.Entitas.Levels.LevelStateChangeComponent)CreateComponent(index, typeof(Client.Entitas.Levels.LevelStateChangeComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveLevelStateChange() {
        RemoveComponent(LevelComponentsLookup.LevelStateChange);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class LevelMatcher {

    static Entitas.IMatcher<LevelEntity> _matcherLevelStateChange;

    public static Entitas.IMatcher<LevelEntity> LevelStateChange {
        get {
            if (_matcherLevelStateChange == null) {
                var matcher = (Entitas.Matcher<LevelEntity>)Entitas.Matcher<LevelEntity>.AllOf(LevelComponentsLookup.LevelStateChange);
                matcher.componentNames = LevelComponentsLookup.componentNames;
                _matcherLevelStateChange = matcher;
            }

            return _matcherLevelStateChange;
        }
    }
}
