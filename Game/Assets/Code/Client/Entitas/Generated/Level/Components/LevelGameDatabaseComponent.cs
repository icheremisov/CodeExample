//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class LevelContext {

    public LevelEntity gameDatabaseEntity { get { return GetGroup(LevelMatcher.GameDatabase).GetSingleEntity(); } }
    public Client.Entitas.Global.GameDatabaseComponent gameDatabase { get { return gameDatabaseEntity.gameDatabase; } }
    public bool hasGameDatabase { get { return gameDatabaseEntity != null; } }

    public LevelEntity SetGameDatabase(XLib.Configs.Contracts.IGameDatabase newValue) {
        if (hasGameDatabase) {
            throw new Entitas.EntitasException("Could not set GameDatabase!\n" + this + " already has an entity with Client.Entitas.Global.GameDatabaseComponent!",
                "You should check if the context already has a gameDatabaseEntity before setting it or use context.ReplaceGameDatabase().");
        }
        var entity = CreateEntity();
        entity.AddGameDatabase(newValue);
        return entity;
    }

    public void ReplaceGameDatabase(XLib.Configs.Contracts.IGameDatabase newValue) {
        var entity = gameDatabaseEntity;
        if (entity == null) {
            entity = SetGameDatabase(newValue);
        } else {
            entity.ReplaceGameDatabase(newValue);
        }
    }

    public void RemoveGameDatabase() {
        gameDatabaseEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class LevelEntity {

    public Client.Entitas.Global.GameDatabaseComponent gameDatabase { get { return (Client.Entitas.Global.GameDatabaseComponent)GetComponent(LevelComponentsLookup.GameDatabase); } }
    public bool hasGameDatabase { get { return HasComponent(LevelComponentsLookup.GameDatabase); } }

    public void AddGameDatabase(XLib.Configs.Contracts.IGameDatabase newValue) {
        var index = LevelComponentsLookup.GameDatabase;
        var component = (Client.Entitas.Global.GameDatabaseComponent)CreateComponent(index, typeof(Client.Entitas.Global.GameDatabaseComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceGameDatabase(XLib.Configs.Contracts.IGameDatabase newValue) {
        var index = LevelComponentsLookup.GameDatabase;
        var component = (Client.Entitas.Global.GameDatabaseComponent)CreateComponent(index, typeof(Client.Entitas.Global.GameDatabaseComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveGameDatabase() {
        RemoveComponent(LevelComponentsLookup.GameDatabase);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class LevelMatcher {

    static Entitas.IMatcher<LevelEntity> _matcherGameDatabase;

    public static Entitas.IMatcher<LevelEntity> GameDatabase {
        get {
            if (_matcherGameDatabase == null) {
                var matcher = (Entitas.Matcher<LevelEntity>)Entitas.Matcher<LevelEntity>.AllOf(LevelComponentsLookup.GameDatabase);
                matcher.componentNames = LevelComponentsLookup.componentNames;
                _matcherGameDatabase = matcher;
            }

            return _matcherGameDatabase;
        }
    }
}
